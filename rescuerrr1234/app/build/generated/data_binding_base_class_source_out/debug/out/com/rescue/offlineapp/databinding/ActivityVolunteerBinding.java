// Generated by view binder compiler. Do not edit!
package com.rescue.offlineapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.rescue.offlineapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVolunteerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardStatus;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final ImageView ivStatusIcon;

  @NonNull
  public final RecyclerView rvAlerts;

  @NonNull
  public final SwitchMaterial switchListening;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAlertCount;

  @NonNull
  public final TextView tvAlertsTitle;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvStatusDetail;

  private ActivityVolunteerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardStatus, @NonNull LinearLayout emptyState,
      @NonNull ImageView ivStatusIcon, @NonNull RecyclerView rvAlerts,
      @NonNull SwitchMaterial switchListening, @NonNull Toolbar toolbar,
      @NonNull TextView tvAlertCount, @NonNull TextView tvAlertsTitle, @NonNull TextView tvStatus,
      @NonNull TextView tvStatusDetail) {
    this.rootView = rootView;
    this.cardStatus = cardStatus;
    this.emptyState = emptyState;
    this.ivStatusIcon = ivStatusIcon;
    this.rvAlerts = rvAlerts;
    this.switchListening = switchListening;
    this.toolbar = toolbar;
    this.tvAlertCount = tvAlertCount;
    this.tvAlertsTitle = tvAlertsTitle;
    this.tvStatus = tvStatus;
    this.tvStatusDetail = tvStatusDetail;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVolunteerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVolunteerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_volunteer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVolunteerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardStatus;
      MaterialCardView cardStatus = ViewBindings.findChildViewById(rootView, id);
      if (cardStatus == null) {
        break missingId;
      }

      id = R.id.emptyState;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.ivStatusIcon;
      ImageView ivStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivStatusIcon == null) {
        break missingId;
      }

      id = R.id.rvAlerts;
      RecyclerView rvAlerts = ViewBindings.findChildViewById(rootView, id);
      if (rvAlerts == null) {
        break missingId;
      }

      id = R.id.switchListening;
      SwitchMaterial switchListening = ViewBindings.findChildViewById(rootView, id);
      if (switchListening == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvAlertCount;
      TextView tvAlertCount = ViewBindings.findChildViewById(rootView, id);
      if (tvAlertCount == null) {
        break missingId;
      }

      id = R.id.tvAlertsTitle;
      TextView tvAlertsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAlertsTitle == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tvStatusDetail;
      TextView tvStatusDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusDetail == null) {
        break missingId;
      }

      return new ActivityVolunteerBinding((CoordinatorLayout) rootView, cardStatus, emptyState,
          ivStatusIcon, rvAlerts, switchListening, toolbar, tvAlertCount, tvAlertsTitle, tvStatus,
          tvStatusDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
