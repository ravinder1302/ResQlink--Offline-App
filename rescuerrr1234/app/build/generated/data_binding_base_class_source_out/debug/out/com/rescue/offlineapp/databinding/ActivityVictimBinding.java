// Generated by view binder compiler. Do not edit!
package com.rescue.offlineapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.rescue.offlineapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVictimBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnSOS;

  @NonNull
  public final MaterialButton btnSendAlert;

  @NonNull
  public final TextInputEditText etMessage;

  @NonNull
  public final TextInputEditText etNeed;

  @NonNull
  public final CircularProgressIndicator progressIndicator;

  @NonNull
  public final RadioButton rbHigh;

  @NonNull
  public final RadioButton rbLow;

  @NonNull
  public final RadioButton rbMedium;

  @NonNull
  public final RadioGroup rgPriority;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvStatus;

  private ActivityVictimBinding(@NonNull CoordinatorLayout rootView, @NonNull MaterialButton btnSOS,
      @NonNull MaterialButton btnSendAlert, @NonNull TextInputEditText etMessage,
      @NonNull TextInputEditText etNeed, @NonNull CircularProgressIndicator progressIndicator,
      @NonNull RadioButton rbHigh, @NonNull RadioButton rbLow, @NonNull RadioButton rbMedium,
      @NonNull RadioGroup rgPriority, @NonNull Toolbar toolbar, @NonNull TextView tvLocation,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.btnSOS = btnSOS;
    this.btnSendAlert = btnSendAlert;
    this.etMessage = etMessage;
    this.etNeed = etNeed;
    this.progressIndicator = progressIndicator;
    this.rbHigh = rbHigh;
    this.rbLow = rbLow;
    this.rbMedium = rbMedium;
    this.rgPriority = rgPriority;
    this.toolbar = toolbar;
    this.tvLocation = tvLocation;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVictimBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVictimBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_victim, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVictimBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSOS;
      MaterialButton btnSOS = ViewBindings.findChildViewById(rootView, id);
      if (btnSOS == null) {
        break missingId;
      }

      id = R.id.btnSendAlert;
      MaterialButton btnSendAlert = ViewBindings.findChildViewById(rootView, id);
      if (btnSendAlert == null) {
        break missingId;
      }

      id = R.id.etMessage;
      TextInputEditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.etNeed;
      TextInputEditText etNeed = ViewBindings.findChildViewById(rootView, id);
      if (etNeed == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      CircularProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.rbHigh;
      RadioButton rbHigh = ViewBindings.findChildViewById(rootView, id);
      if (rbHigh == null) {
        break missingId;
      }

      id = R.id.rbLow;
      RadioButton rbLow = ViewBindings.findChildViewById(rootView, id);
      if (rbLow == null) {
        break missingId;
      }

      id = R.id.rbMedium;
      RadioButton rbMedium = ViewBindings.findChildViewById(rootView, id);
      if (rbMedium == null) {
        break missingId;
      }

      id = R.id.rgPriority;
      RadioGroup rgPriority = ViewBindings.findChildViewById(rootView, id);
      if (rgPriority == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityVictimBinding((CoordinatorLayout) rootView, btnSOS, btnSendAlert,
          etMessage, etNeed, progressIndicator, rbHigh, rbLow, rbMedium, rgPriority, toolbar,
          tvLocation, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
