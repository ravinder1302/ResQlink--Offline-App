// Generated by view binder compiler. Do not edit!
package com.rescue.offlineapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.rescue.offlineapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAlertBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnAccept;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvMessage;

  @NonNull
  public final TextView tvNeed;

  @NonNull
  public final TextView tvPriority;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final View viewPriority;

  private ItemAlertBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton btnAccept,
      @NonNull TextView tvLocation, @NonNull TextView tvMessage, @NonNull TextView tvNeed,
      @NonNull TextView tvPriority, @NonNull TextView tvTime, @NonNull View viewPriority) {
    this.rootView = rootView;
    this.btnAccept = btnAccept;
    this.tvLocation = tvLocation;
    this.tvMessage = tvMessage;
    this.tvNeed = tvNeed;
    this.tvPriority = tvPriority;
    this.tvTime = tvTime;
    this.viewPriority = viewPriority;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAlertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAlertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_alert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAlertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAccept;
      MaterialButton btnAccept = ViewBindings.findChildViewById(rootView, id);
      if (btnAccept == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvMessage;
      TextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      id = R.id.tvNeed;
      TextView tvNeed = ViewBindings.findChildViewById(rootView, id);
      if (tvNeed == null) {
        break missingId;
      }

      id = R.id.tvPriority;
      TextView tvPriority = ViewBindings.findChildViewById(rootView, id);
      if (tvPriority == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.viewPriority;
      View viewPriority = ViewBindings.findChildViewById(rootView, id);
      if (viewPriority == null) {
        break missingId;
      }

      return new ItemAlertBinding((MaterialCardView) rootView, btnAccept, tvLocation, tvMessage,
          tvNeed, tvPriority, tvTime, viewPriority);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
